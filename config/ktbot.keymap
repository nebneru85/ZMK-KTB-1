/*
 * Copyright (c) 2023 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// Short versions

#define RGBON   &rgb_ug RGB_ON
#define RGBOFF  &rgb_ug RGB_OFF
#define RGBTOG  &rgb_ug RGB_TOG
#define RGBHUI  &rgb_ug RGB_HUI
#define RGBHUD  &rgb_ug RGB_HUD
#define RGBSAI  &rgb_ug RGB_SAI
#define RGBSAD  &rgb_ug RGB_SAD
#define RGBBRI  &rgb_ug RGB_BRI
#define RGBBRD  &rgb_ug RGB_BRD
#define RGBEFF  &rgb_ug RGB_EFF
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define SHORT   3

/*
 * Assign the cs-gpios pin to 4.
 * Uncomment these next few lines if implementing nice!view Displays
 */

nice_view_spi: &spi0 { cs-gpios = <&pro_micro 4 GPIO_ACTIVE_HIGH>; };

behaviors {
    volknob: volume_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "ENCODER_VOLUME_KNOB";
        #sensor-binding-cells = <0>;
        bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
    };

    rgbknob: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate-var";
        label = "ENCODER_RGB";
        #sensor-binding-cells = <2>;
        bindings = <&rgb_ug>, <&rgb_ug>;
    };

    Bluetooth: Bluetooth {
        compatible = "zmk,behavior-sensor-rotate";
        label = "BLUETOOTH";
        #sensor-binding-cells = <0>;
        bindings = <&bt BT_PRV>, <&bt BT_NXT>;

        tap-ms = <5>;
    };

    Mous: Mous {
        compatible = "zmk,behavior-sensor-rotate";
        label = "MOUS";
        #sensor-binding-cells = <0>;
        bindings = <&mkp MB4>, <&mkp MB5>;

        tap-ms = <5>;
    };
};

//////////////////////////////////////// Pin para RGB ws2812 ////////////////////////////////////////////////
//////////////////////////////////////////////////

/ {
    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = " QWERTY";
            bindings = <
&mo DEFAULT  &kp ESC    &kp Q     &kp W   &kp E     &kp R      &kp T      &kp Y      &kp U      &kp I     &kp O      &kp P     &kp BSLH   &kp BSPC
&mo LOWER    &kp TAB    &kp A     &kp S   &kp D     &kp F      &kp G      &kp H      &kp J      &kp K     &kp L      &kp SEMI  &kp TILDE  &trans
&mo RAISE    &kp LSHFT  &kp Z     &kp X   &kp C     &kp V      &kp B      &kp ENTER  &kp N      &kp M     &kp COMMA  &kp DOT   &kp RSHFT  &kp PG_UP
&mo SHORT    &kp LCTRL  &kp LGUI  &trans  &kp LALT  &kp SPACE  &kp DEL    &kp ENTER  &kp SPACE  &kp RALT  &trans     &trans    &kp RCTRL  &kp PG_DN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREV>;
        };

        lower_layer {
            label = " Lower";
            bindings = <
&trans  &trans     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8     &kp N9  &kp N0  &kp ASTERISK  &kp SLASH
&trans  &trans     &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp UP    &kp END    &kp N7  &kp N8  &kp N9        &kp MINUS
&trans  &kp LC(C)  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp RIGHT  &kp N4  &kp N5  &kp N6        &kp PLUS
&trans  &kp LC(P)  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &kp N0     &kp N1  &kp N2  &kp N3        &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_FF C_RW &inc_dec_kp C_FF C_RW>;
        };

        raise_layer {
            label = " Raise";
            bindings = <
&bt BT_NXT  &trans  &kp F1           &kp F2           &kp F3           &kp F4           &kp F5    &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &kp F11  &kp F12
&bt BT_CLR  &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans   &trans
&trans      &trans  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &trans    &trans        &trans        &trans        &trans        &trans        &trans   &trans
&trans      &trans  &trans           &trans           &trans           &trans           &trans    &kp UP        &trans        &trans        &trans        &trans        &trans   &trans
            >;

            sensor-bindings = <&Bluetooth>, <&rgbknob RGB_EFR RGB_EFF>;
        };

        short_layer {
            label = " Short";
            bindings = <
&sys_reset   &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&Mous>, <&Mous>;
        };
    };
};
